#!/usr/bin/env bash 

SKIP_NDBDS=0
SKIP_MYSQLDS=0
SKIP_USER_CHECK=0
TIME_WAIT=<%= node['ndb']['wait_startup'] %>

while [ $# -gt 0 ]; do
  case "$1" in
    -h|--help|-help)
              echo "usage: <prog> [--skip-ndbds (do not start data nodes)] [--skip-mysqlds (do not start mysql servers)] [-sc (delete old configurations)] [-f skip user check]"
	      echo ""
	      echo "connectstring is set to <%= node['ndb']['connectstring'] %>"
	      exit 0 
	      ;;
    -f|--force)
              SKIP_USER_CHECK=1
	      ;;
    -t|--time-wait-for-start)
	      shift
              TIME_WAIT=$1
	      ;;
    -sc)
              echo "Deleting old configurations from /<%= node['ndb']['root_dir'] %>/mgmd/"
              rm -rf ../<%= node['ndb']['root_dir'] %>/mgmd/*
	      ;;
    --skip-ndbds)
              SKIP_NDBDS=1
	      ;;
    --skip-mysqlds)
              SKIP_MYSQLDS=1
	      ;;
	   * )
              echo "Unknown option '$1'" 
              exit -1
  esac
  shift       
done


  echo "" 
  echo "Testing to see if a cluster is already running on host '<%= node['ndb']['connectstring'] %>' ..." 
  echo "" 
  <%= node['mysql']['base_dir'] %>/bin/ndb_mgm -c <%= node['ndb']['connectstring'] %> -t 2 -e show 1> /dev/null

  if [ $? -eq 0 ] ; then
      echo ""      
      echo "A management server is already running on <%= node['ndb']['connectstring'] %>" 
      echo "" 	
      exit 2
  fi



USERID=$(id | sed -e 's/).*//; s/^.*(//;')
if [ "X$USERID" = "Xroot" ]; then
    echo ""
    echo "You started cluster as user: 'root'."

    echo ""
    start_as_wrong_user() 
    {
	echo -n "Do you really want to start the cluster as user \"$USERID\"? y/n/h(help) "
	read ACCEPT
	case $ACCEPT in
	    y | Y)
	    ;;
	    n | N)
		echo ""
		echo "Bye.."
		echo ""
		exit 1
		;;
	    *)
		echo ""
		echo -n "Please enter 'y' or 'n'." 
		start_as_wrong_user
		;;
	esac
    }
    start_as_wrong_user
fi

echo "Your are initializing and starting the MySQL Cluster database."
echo "If you have already initialised the Cluster, exit this script"
echo "and run the 'start-noinit-' script, instead."
echo ""

really_start() 
{
  echo -n "Do an initial start of NDB? This will DELETE any existing data!  y/n/h(help) "
  read ACCEPT
  case $ACCEPT in
   y | Y)
      ;;
   n | N)
      exit 1
      ;;
    *)
      echo ""
      echo "Please enter 'y' or 'n'." 
      really_start
      ;;
   esac
}
if [ $SKIP_USER_CHECK -eq 0 ] ; then
 really_start
fi
      

echo "Cluster Startup may take a few minutes."  


echo "Truncating the cluster log file: <%= node['ndb']['log_dir'] %>/cluster.log"
rm <%= node['ndb']['log_dir'] %>/cluster.log 

echo "Starting the Management Server ....."

if [ -e <%= node['ndb']['log_dir'] %>/cluster.log ] ; then
    SIZE_CL=$(wc -l < <%= node['ndb']['log_dir'] %>/cluster.log)
else
    SIZE_CL=0
fi

#remove memory of old configurations
#echo If you want to remove warnings for incompatible configuration changes, run rm -rf ../$NDB_DIR/$MGM_DATADIR/*

<%= node['mysql']['base_dir'] %>/bin/ndb_mgmd -f <%= node['ndb']['root_dir'] %>/config.ini  --configdir=<%= node['ndb']['root_dir'] %>/mgmd --reload   

if [ $? -ne 0 ] ; then
  echo "Problem starting the Management Server."
  echo "Please read the logs in:"
  echo "<%= node['ndb']['log_dir'] %>."
  echo "<%= node['ndb']['root_dir'] %>/mgmd_1"
  exit 1
fi

MGMD_STARTED=0

echo "Waiting for ndb_mgmd to start"
    

MGMD_TIMEOUT=200
MGMD_COUNT=0
while [ $MGMD_STARTED -eq 0 ] ; do

  if [ -e <%= node['ndb']['log_dir'] %>/cluster.log ] ; then
    UPDATED_SIZE_CL=$(wc -l < <%= node['ndb']['log_dir'] %>/cluster.log)
  else
    UPDATED_SIZE_CL=0
  fi
    
  if [ $SIZE_CL -lt $UPDATED_SIZE_CL ] ; then
	MGMD_STARTED=1;
	echo ""
  else

      if [ ${MGMD_COUNT} -eq 0 ] ; then
	  echo -n "Seconds left before timeout: "
      fi

      echo -n "$((MGMD_TIMEOUT - MGMD_COUNT))"
      sleep 1
      MGMD_COUNT=$((MGMD_COUNT + 1))

      if [ "$MGMD_COUNT" -gt $MGMD_TIMEOUT ] ; then
	  MGMD_STARTED=2;
      fi
  fi

done

  if [ $MGMD_STARTED -ne 1 ] ; then
   echo ""
   echo "Failure when starting the 'ndb_mgmd'."
   echo "Please check for errors in your configuration file or report a bug."
   echo ""
   echo "You now need to kill the ndb_mgmd process."
   echo "To find the proceses-id of ndb_mgmd: 'ps -ef | grep ndb_mgmd | grep <%= node['ndb']['user'] %>' "
   echo "To kill the process: kill -9 [process-id]"
   exit 2
  fi


sleep 1

<% id = 1 -%>
<% for ndbd in node['ndb']['ndbd']['private_ips'] -%>
echo ""
if [ $SKIP_NDBDS -eq 0 ] ; then
    echo "Starting a Data Node on host: <%= ndbd %> "
    echo "For username: <%= node['ndb']['user'] %> "
  ssh <%= node['ndb']['user'] %>@<%= ndbd %> <%= node['ndb']['scripts_dir'] %>/ndbd-init.sh

  if [ $? -ne 0 ] ; then
    echo "Problem starting a Data Node on host <%= ndbd %>."
    echo "Please read the logs on host <%= ndbd %> in:"
    echo "<%= node['ndb']['log_dir'] %>"
  fi
else
  echo "Skipping starting ndbd-<%= id %> at <%= ndbd %>"
fi
<% id += 1 -%>
<% end -%>


echo "Waiting for the cluster to be ready by calling:"
echo "ndb_waiter -c <%= node['ndb']['connectstring'] %> --timeout=$TIME_WAIT"
echo "This can take a few minutes..."

<%= node['mysql']['base_dir'] %>/bin/ndb_waiter -c <%= node['ndb']['connectstring'] %> --timeout=$TIME_WAIT 2>&1 > /dev/null

if [ $? -ne 0 ] ; then
    echo "Error when waiting on the cluster to be ready."
    echo "Exiting..."
    exit 3
fi

<% id = node['mysql']['id'] -%>
<% for mysqld in node['ndb']['mysqld']['private_ips'] -%>

if [ $SKIP_MYSQLDS -eq 0 ] ; then
    echo "Starting a MySQL Server on host: <%= mysqld %> "
    echo "For username: <%= node['ndb']['user'] %> "
  ssh <%= node['ndb']['user'] %>@<%= mysqld %> "<%= node['ndb']['scripts_dir'] %>/mysql-server-start.sh --force"

  if [ $? -ne 0 ] ; then
    echo "Problem starting a MySQL Server Node on host <%= mysqld %>."
    echo "Please read the logs on host <%= mysqld %> in:"
    echo "<%= node['ndb']['log_dir'] %>/mysql_<%= @id %>_out.log"
  fi
else
  echo "Skipping starting mysqld-<%= id %> at <%= mysqld %>"
fi
<% id += 1 -%>
<% end -%>


sleep 3

<%= node['ndb']['base_dir'] %>/scripts/mgm-client.sh -e show

exit 0
